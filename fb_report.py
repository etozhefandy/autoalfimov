import asyncio
import re
import hashlib
import hmac
import schedule
import time
from facebook_business.adobjects.adaccount import AdAccount
from facebook_business.api import FacebookAdsApi
from telegram import Bot

# ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Facebook =====
ACCESS_TOKEN = "EAASZCrBwhoH0BO6hvTPZBtAX3OFPcJjZARZBZCIllnjc4GkxagyhvvrylPKWdU9jMijZA051BJRRvVuV1nab4k5jtVO5q0TsDIKbXzphumaFIbqKDcJ3JMvQTmORdrNezQPZBP14pq4NKB56wpIiNJSLFa5yXFsDttiZBgUHAmVAJknN7Ig1ZBVU2q0vRyQKJtyuXXwZDZD"
APP_ID = "1336645834088573"
APP_SECRET = "01bf23c5f726c59da318daa82dd0e9dc"
FacebookAdsApi.init(APP_ID, APP_SECRET, ACCESS_TOKEN)

# ===== –°–ø–∏—Å–æ–∫ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ =====
AD_ACCOUNTS = [
    "act_1206987573792913",
    "act_1333550570916716",
    "act_798205335840576",
    "act_844229314275496",
    "act_1108417930211002",
    "act_2342025859327675",
    "act_508239018969999",
    "act_1513759385846431",
    "act_1042955424178074",
    "act_1415004142524014"
]

# ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram =====
TELEGRAM_TOKEN = "8033028841:AAGp7856PuHCrAeIXYHGN2W6q83SsCWxxXI"
CHAT_ID = "253181449"
bot = Bot(token=TELEGRAM_TOKEN)

# ===== –û—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ =====
ALLOWED_ACTIONS = {"link_click"}

# ===== –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ =====
def clean_text(text):
    if not isinstance(text, str):
        return str(text)
    text = re.sub(r'([_\*\[\]()~`>#+\-=|{}.!])', r'\\\1', text)
    return text

# ===== –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è appsecret_proof =====
def generate_appsecret_proof():
    return hmac.new(APP_SECRET.encode(), ACCESS_TOKEN.encode(), hashlib.sha256).hexdigest()

# ===== –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç =====
def is_account_active(account_id):
    try:
        account_data = AdAccount(account_id).api_get(fields=['account_status'])
        return "‚úÖ" if account_data['account_status'] == 1 else "üî¥"
    except Exception:
        return "üî¥"

# ===== –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Facebook =====
def get_facebook_data(account_id):
    account = AdAccount(account_id)
    fields = ['impressions', 'cpm', 'clicks', 'cpc', 'actions', 'cost_per_action_type', 'spend']
    params = {'date_preset': 'yesterday', 'level': 'account', 'appsecret_proof': generate_appsecret_proof()}
    
    try:
        campaigns = account.get_insights(fields=fields, params=params)
    except Exception as e:
        return f"‚ö† –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {account_id}: {clean_text(str(e))}"
    
    try:
        account_name = account.api_get(fields=['name'])['name']
    except Exception:
        account_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç"
    
    status_emoji = is_account_active(account_id)
    report = f"{status_emoji} {clean_text(account_name)}\n"
    
    if not campaigns:
        report += "\n‚ö† –î–∞–Ω–Ω—ã—Ö –∑–∞ –≤—á–µ—Ä–∞ –Ω–µ—Ç"
    else:
        for campaign in campaigns:
            report += f"\nüëÅ –ü–æ–∫–∞–∑—ã: {clean_text(campaign.get('impressions', '‚Äî'))}"
            report += f"\nüéØ CPM: {clean_text(str(round(float(campaign.get('cpm', 0)) / 100, 2)))} USD"
            report += f"\nüñ± –ö–ª–∏–∫–∏: {clean_text(campaign.get('clicks', '‚Äî'))}"
            report += f"\nüí∏ CPC: {clean_text(str(round(float(campaign.get('cpc', 0)), 2)))} USD"
            
            if 'cost_per_action_type' in campaign:
                for cost in campaign['cost_per_action_type']:
                    if cost['action_type'] in ALLOWED_ACTIONS:
                        report += f"\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫–ª–∏–∫–∞: {clean_text(str(round(float(cost['value']), 2)))} USD"
            
            spend = campaign.get('spend', 0)
            report += f"\nüíµ –°—É–º–º–∞ –∑–∞—Ç—Ä–∞—Ç: {clean_text(str(round(float(spend), 2)))} USD"
    return report

# ===== –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ –≤ Telegram =====
async def send_to_telegram(message):
    print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {message}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
    try:
        await bot.send_message(chat_id=CHAT_ID, text=message, parse_mode="MarkdownV2")
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")  # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
async def send_to_telegram(message):
    print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {message}")
    try:
        await bot.send_message(chat_id=CHAT_ID, text=message, parse_mode="MarkdownV2")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
# ===== –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è =====
async def main():
    print("üîç –ó–∞–ø—É—Å–∫ main() ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram")  # –û—Ç–ª–∞–¥–∫–∞
    for account_id in AD_ACCOUNTS:
        print(f"üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞: {account_id}")  # –û—Ç–ª–∞–¥–∫–∞
        report = get_facebook_data(account_id)
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞: {report}")  # –û—Ç–ª–∞–¥–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        await send_to_telegram(report) 
# ===== –ó–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é =====
def run_bot():
    print("–ó–∞–ø—É—Å–∫ run_bot()")
print("üöÄ –í—ã–∑–æ–≤ main() ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞—á–∞–ª–∞—Å—å!")    
asyncio.run(main())

# –ó–∞–ø—É—Å–∫–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:30 —É—Ç—Ä–∞
schedule.every().day.at("04:30").do(run_bot) # –í–º–µ—Å—Ç–æ 09:30 —Å—Ç–∞–≤–∏–º 04:30 (–ø–æ UTC)

if __name__ == "__main__":
    print("–°–∫—Ä–∏–ø—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª, –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é")
    while True:
        schedule.run_pending()
        print("–°–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –∂–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞...")
        time.sleep(60)

# ===== –•—Ä–∞–Ω–∏–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è =====
sent_warnings = set()

# ===== –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏ –ø–ª–∞—Ç–µ–∂–µ–π =====
def check_billing_and_status():
    global sent_warnings
    problem_accounts = []

    for account_id in AD_ACCOUNTS:
        try:
            account = AdAccount(account_id)
            account_info = account.api_get(fields=['account_status', 'name', 'disable_reason'])

            account_name = account_info.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç')
            status = account_info.get('account_status', 0)
            disable_reason = account_info.get('disable_reason', None)

            # –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–ª–∞—Ç–µ–∂–æ–º
            if status != 1 or disable_reason:
                if account_id not in sent_warnings:
                    problem_accounts.append(f"üö® –í–Ω–∏–º–∞–Ω–∏–µ! –†–µ–∫–ª–∞–º–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç *{account_name}* –æ—Ç–∫–ª—é—á–µ–Ω –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–ª–∞—Ç–µ–∂–æ–º!")
                    sent_warnings.add(account_id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ

            # –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω, —É–±–∏—Ä–∞–µ–º –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
            elif account_id in sent_warnings:
                problem_accounts.append(f"‚úÖ –†–µ–∫–ª–∞–º–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç *{account_name}* —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω!")
                sent_warnings.remove(account_id)

        except Exception as e:
            problem_accounts.append(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞ {account_id}: {clean_text(str(e))}")

    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if problem_accounts:
        message = "\n".join(problem_accounts)
        asyncio.run(send_to_telegram(message))

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∏–ª–ª–∏–Ω–≥–∞ –∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
schedule.every(30).minutes.do(check_billing_and_status)
